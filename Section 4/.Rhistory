}
x = 3
SequencetoReturn = rep(0, x)
for( i in 1:x){
print(-1 )
SequencetoReturn[i] = (x-i) * ((-1)^(i-1) )
}
SequencetoReturn
x = 1000
SequencetoReturn = rep(0, x)
for( i in 1:x){
SequencetoReturn[i] = (x-i) * ((-1)^(i-1) )
}
FinalAnswer = toeplitz(SequencetoReturn)
head(FinalAnswer)
x = 3
SequencetoReturn = rep(0, x)
for( i in 1:x){
SequencetoReturn[i] = (x-i) * ((-1)^(i-1) )
}
FinalAnswer = toeplitz(SequencetoReturn)
FinalAnswer
x = 3
SequencetoReturn = rep(0, x)
for( i in 1:x){
SequencetoReturn[i] = (x-i) * ((-1)^(i-1) )
}
FinalAnswer = toeplitz(SequencetoReturn)
FinalAnswer
x = 1000
SequencetoReturn = rep(0, x)
for( i in 1:x){
SequencetoReturn[i] = (x-i) * ((-1)^(i-1) )
}
FinalAnswer = toeplitz(SequencetoReturn)
FinalAnswer
toeplitz
?toeplitz
toeplitz {stats}
a = 1
b = 2
a + b
a = 1
b = 2
a + b
a = 1
b = 2
a + b
a = 1
b = 2
a+b
library("googleAuthR")
library("googleAnalyticsR")
library("ggplot2")
library("scales")
## authenticate, or use the RStudio Addin "Google API Auth" with analytics scopes set
ga_auth(new_user = T)
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-14"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
library("googleAuthR")
library("googleAnalyticsR")
library("ggplot2")
library("scales")
## authenticate, or use the RStudio Addin "Google API Auth" with analytics scopes set
ga_auth(new_user = T)
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-14"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-14"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
ga_auth(new_user = T)
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-14"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
ga_data
library("googleAuthR")
library("googleAnalyticsR")
library("ggplot2")
library("scales")
## authenticate, or use the RStudio Addin "Google API Auth" with analytics scopes set
ga_auth()
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-14"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
ga_data
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
ga_data
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
ga_data
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-14"), metrics = c("ga:sessions"), dimensions = c("ga:userType"))
ga_data
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-14"), metrics = c("ga:sessions"), dimensions = c("ga:userType"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:userType"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:userType"))
ga_data
ga_data
ga_data
ga_data
ga_data
ga_data
ga_data
library("googleAuthR")
library("googleAnalyticsR")
library("ggplot2")
library("scales")
## authenticate, or use the RStudio Addin "Google API Auth" with analytics scopes set
#ga_auth(new_user = T)
ga_auth()
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data  = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:userType"))
library("googleAuthR")
library("googleAnalyticsR")
library("ggplot2")
library("scales")
## authenticate, or use the RStudio Addin "Google API Auth" with analytics scopes set
#ga_auth(new_user = T)
ga_auth()
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data  = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:userType"))
ga_data
library("googleAuthR")
library("googleAnalyticsR")
library("ggplot2")
library("scales")
## authenticate, or use the RStudio Addin "Google API Auth" with analytics scopes set
ga_auth()
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-04-14", "2017-06-18"), metrics = c("ga:sessions"), dimensions = c("ga:sessionCount"))
ga_data
library("googleAuthR")
library("googleAnalyticsR")
library("ggplot2")
#install.packages("scales")
library("scales")
## authenticate, or use the RStudio Addin "Google API Auth" with analytics scopes set
ga_auth()
## get your accounts
account_list <- ga_account_list()
account_list$viewId
ga_id <- 152486052
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-06-11", "2017-06-18"), metrics = c("ga:exits,ga:pageviews"), dimensions = c("ga:exitPagePath") ,sort=-ga:exits)
ga_data = google_analytics_4(ga_id, date_range = c("2017-06-11", "2017-06-18"), metrics = c("ga:exits,ga:pageviews"), dimensions = c("ga:exitPagePath"))
# downloading Google API
ga_data = google_analytics_4(ga_id, date_range = c("2017-06-11", "2017-06-18"), metrics = c("ga:exits","ga:pageviews"), dimensions = c("ga:exitPagePath"))
ga_data
# exit
ga_data = google_analytics_4(ga_id, date_range = c("2017-06-11", "2017-06-18"), metrics = c("ga:exits","ga:pageviews", "ga:bounceRate"), dimensions = c("ga:exitPagePath"))
ga_data
ga_data = google_analytics_4(ga_id, date_range = c("2017-06-11", "2017-06-18"), metrics = c("ga:exits","ga:pageviews", "ga:bounceRate"), dimensions = c("ga:pagePath"))
ga_data
# Read in the CSV File
ga_data = read.csv("4.4_ExampleFile.csv", sep=",", header=T)
# Modifications
setwd("~/Documents/RCourse (Volume 2)/Section 4")
# Read in the CSV File
ga_data = read.csv("4.4_ExampleFile.csv", sep=",", header=T)
# Modifications
ga_data
ga_data
ga_data
# library
library(ggplot2)
# create a dataset
specie=c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition=rep(c("normal" , "stress" , "Nitrogen") , 4)
value=abs(rnorm(12 , 0 , 15))
data=data.frame(specie,condition,value)
# Grouped
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="dodge", stat="identity")
# Stacked
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar( stat="identity")
# Stacked Percent
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar( stat="identity", position="fill")
# Grouped
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="dodge", stat="identity")
# Calculationg New Users Pro
ga_data$NewUsersProp = ga_data$newUsers / ga_data$users
ga_data
# Read in the CSV File
ga_data = read.csv("4.4_ExampleFile.csv", sep=",", header=T)
# Modifications
# Calculationg New Users Pro
ga_data$NewUsersProp = ga_data$newUsers / ga_data$users
# Making all levels consistent
ga_data$campaign = factor(ga_data$campaign, levels = ga_data$campaign)
ga_data.melted = melt(ga_data_filtered, id="Campaign")
ga_data
library("ggplot2")
library("reshape")
library("scales")
library("ggplot2")
library("reshape")
library("scales")
# Read in the CSV File
ga_data = read.csv("4.4_ExampleFile.csv", sep=",", header=T)
# Modifications
# Calculationg New Users Pro
ga_data$NewUsersProp = ga_data$newUsers / ga_data$users
# Making all levels consistent
ga_data$campaign = factor(ga_data$campaign, levels = ga_data$campaign)
#ga_data$Bounce.Rate = percent(ga_data$Bounce.Rate)
ga_data
# 1. Total number
ga_data_filtered = ga_data[,c("campaign", "users", "newUsers", "sessions", "bounces")]
ga_data.melted = melt(ga_data_filtered, id="campaign")
ga_data.melted
# Grouped
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity")
ga_data_filtered = ga_data[,c("campaign", "users", "newUsers", "sessions", "bounces")]
ga_data
ga_data
# Read in the CSV File
ga_data = read.csv("4.4_ExampleFile.csv", sep=",", header=T)
# Modifications
# Making all levels consistent
ga_data$campaign = factor(ga_data$campaign, levels = ga_data$campaign)
#ga_data$Bounce.Rate = percent(ga_data$Bounce.Rate)
# 1. Total number
ga_data_filtered = ga_data[,c("campaign", "users", "newUsers", "sessions", "bounces")]
ga_data.melted = melt(ga_data_filtered, id="campaign")
# this is the plot for
# Grouped
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity")
ga_data
ga_data.campaignA = ga_data[2,]
ga_data.campaignA = melt(ga_data.campaignA, id="campaign")
ga_data.campaignA
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="tomato3")
ga_data.campaignC = ga_data[2,]
ga_data.campaignC = melt(ga_data.campaignC, id="campaign")
ggplot(ga_data.campaignC, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="tomato3")
ga_data.campaignB = ga_data[2,]
ga_data.campaignB = melt(ga_data.campaignB, id="campaign")
ggplot(ga_data.campaignB, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="tomato3")
# Color Scheme
MyColorPallet = c("#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#d1e5f0","#92c5de","#4393c3","#2166ac","#053061")
df <- structure(c(106487, 495681, 1597442, 2452577, 2065141, 2271925, 4735484, 3555352, 8056040, 4321887, 2463194, 347566, 621147, 1325727, 1123492, 800368, 761550, 1359737, 1073726, 36, 53, 141, 41538, 64759, 124160, 69942, 74862, 323543, 247236, 112059, 16595, 37028, 153249, 427642, 1588178, 2738157, 2795672, 2265696, 11951, 33424, 62469, 74720, 166607, 404044, 426967, 38972, 361888, 1143671, 1516716, 160037, 354804, 996944, 1716374, 1982735, 3615225, 4486806, 3037122, 17, 54, 55, 210, 312, 358, 857, 350, 7368, 8443, 6286, 1750, 7367, 14092, 28954, 80779, 176893, 354939, 446792, 33333, 69911, 53144, 29169, 18005, 11704, 13363, 18028, 46547, 14574, 8954, 2483, 14693, 25467, 25215, 41254, 46237, 98263, 185986), .Dim = c(19, 5), .Dimnames = list(c("1820-30", "1831-40", "1841-50", "1851-60", "1861-70", "1871-80", "1881-90", "1891-00", "1901-10", "1911-20", "1921-30", "1931-40", "1941-50", "1951-60", "1961-70", "1971-80", "1981-90", "1991-00", "2001-06"), c("Europe", "Asia", "Americas", "Africa", "Oceania")))
df.m <- melt(df)
df.m <- rename(df.m, Period = Var1, Region = Var2)
p <- ggplot(df.m, aes(x = Period, y = value/1e+06,fill = Region)) + ggtitle("Migration to the United States by Source Region (1820-2006), In Millions")
p <- p + geom_bar(stat = "identity", position = "stack")
p
df <- structure(c(106487, 495681, 1597442, 2452577, 2065141, 2271925, 4735484, 3555352, 8056040, 4321887, 2463194, 347566, 621147, 1325727, 1123492, 800368, 761550, 1359737, 1073726, 36, 53, 141, 41538, 64759, 124160, 69942, 74862, 323543, 247236, 112059, 16595, 37028, 153249, 427642, 1588178, 2738157, 2795672, 2265696, 11951, 33424, 62469, 74720, 166607, 404044, 426967, 38972, 361888, 1143671, 1516716, 160037, 354804, 996944, 1716374, 1982735, 3615225, 4486806, 3037122, 17, 54, 55, 210, 312, 358, 857, 350, 7368, 8443, 6286, 1750, 7367, 14092, 28954, 80779, 176893, 354939, 446792, 33333, 69911, 53144, 29169, 18005, 11704, 13363, 18028, 46547, 14574, 8954, 2483, 14693, 25467, 25215, 41254, 46237, 98263, 185986), .Dim = c(19, 5), .Dimnames = list(c("1820-30", "1831-40", "1841-50", "1851-60", "1861-70", "1871-80", "1881-90", "1891-00", "1901-10", "1911-20", "1921-30", "1931-40", "1941-50", "1951-60", "1961-70", "1971-80", "1981-90", "1991-00", "2001-06"), c("Europe", "Asia", "Americas", "Africa", "Oceania")))
df.m <- melt(df)
df.m <- rename(df.m, Period = Var1, Region = Var2)
df.m
df.m <- rename(df.m, Period = X1, Region = X2)
p <- ggplot(df.m, aes(x = X1, y = Var2/1e+06,fill = Region)) + ggtitle("Migration to the United States by Source Region (1820-2006), In Millions")
p <- p + geom_bar(stat = "identity", position = "stack")
p
p <- ggplot(df.m, aes(x = X1, y = X2/1e+06,fill = Region)) + ggtitle("Migration to the United States by Source Region (1820-2006), In Millions")
p <- p + geom_bar(stat = "identity", position = "stack")
p
df
df.m <- melt(df)
df.m
p <- ggplot(df.m, aes(x = X1, y = value/1e+06,fill = X2)) + ggtitle("Migration to the United States by Source Region (1820-2006), In Millions")
p <- p + geom_bar(stat = "identity", position = "stack")
p
p
df.m
# now for the goal conversions
# campaign A
ga_data.campaignA = ga_data[2,]
ga_data.campaignA = melt(ga_data.campaignA, id="campaign")
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="tomato3")
ga_data.campaignB = ga_data[3,]
ga_data.campaignB = melt(ga_data.campaignB, id="campaign")
ggplot(ga_data.campaignB, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="tomato3")
ga_data.campaignC = ga_data[4,]
ga_data.campaignC = melt(ga_data.campaignC, id="campaign")
ggplot(ga_data.campaignC, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="tomato3")
ga_data.toCompare = ga_data[c(2,3,4),c("newUsers", "goal1Completions", "goal2Completions")]
ga_data.toCompare
ga_data.toCompare = ga_data[c(2,3,4),c("campaign", "newUsers", "goal1Completions", "goal2Completions")]
ga_data.toCompare
ga_data.toCompare = melt(ga_data.toCompare,id.vars = campaign)
ga_data.toCompare = ga_data[c(2,3,4),c("campaign", "newUsers", "goal1Completions", "goal2Completions")]
ga_data.toCompare = melt(ga_data.toCompare,id.vars = campaign)
ga_data.toCompare
ga_data.toCompare = ga_data[c(2,3,4),c("campaign", "newUsers", "goal1Completions", "goal2Completions")]
ga_data.toCompare = melt(ga_data.toCompare, id.vars = "campaign")
ga_data.toCompare
ggplot(df.m, aes(x = campaign, y =value ,fill = variable)) +  geom_bar(stat = "identity", position = "stack")
ga_data.toCompare
ggplot(ga_data.toCompare, aes(x = campaign, y =value ,fill = variable)) +  geom_bar(stat = "identity", position = "stack")
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity")
library("ggsci")
installed.packages("ggsci")
install.packages("ggsci")
library("ggsci")
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity") + theme_bw()
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity") + theme_bw() + scale_fill_npg()
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity") + theme_bw() + scale_fill_locuszoom()
ga_data.campaignC = ga_data[4,]
ga_data.campaignC = melt(ga_data.campaignC, id="campaign")
ggplot(ga_data.campaignC, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#00A087B2
ga_data.campaignC = ga_data[4,]
ga_data.campaignC = melt(ga_data.campaignC, id="campaign")
ggplot(ga_data.campaignC, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#00A087B2")
ga_data.campaignC = ga_data[4,]
ga_data.campaignC = melt(ga_data.campaignC, id="campaign")
ggplot(ga_data.campaignC, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#00A087B2")
ga_data.campaignB = ga_data[3,]
ga_data.campaignB = melt(ga_data.campaignB, id="campaign")
ggplot(ga_data.campaignB, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#3C5488B2")
ga_data.campaignA = ga_data[2,]
ga_data.campaignA = melt(ga_data.campaignA, id="campaign")
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#DC0000B2")
ggplot(ga_data.toCompare, aes(x = campaign, y =value ,fill = variable)) +  geom_bar(stat = "identity", position = "stack")  +  scale_fill_locuszoom()
ggplot(ga_data.toCompare, aes(x = campaign, y =value ,fill = variable)) +  geom_bar(stat = "identity", position = "stack")  +  scale_fill_simpsons()
ggplot(ga_data.toCompare, aes(x = campaign, y =value ,fill = variable)) +  geom_bar(stat = "identity", position = "stack")  +  scale_fill_rickandmorty()
ggplot(ga_data.toCompare, aes(x = campaign, y =value ,fill = variable)) +  geom_bar(stat = "identity", position = "stack")  +  scale_fill_startrek()
ggplot(ga_data.toCompare, aes(x = campaign, y =value ,fill = variable)) +  geom_bar(stat = "identity", position = "stack", colour="black")  +  scale_fill_startrek()
# Grouped
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity", colour="black") + theme_bw() + scale_fill_locuszoom()
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity", colour="black") + theme_bw() + scale_fill_locuszoom() + labs(title="Overall Traffic",
subtitle="October 2017") +   labs(campaign = "Cylinders")
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity", colour="black") + theme_bw() + scale_fill_locuszoom() + labs(title="Overall Traffic",
subtitle="October 2017") +   labs(x = "Traffic Class", y="Num Visitors", color = "Cylinders")
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity", colour="black") + theme_bw() +  scale_color_manual(labels = c("No Campaign", "Fall Campaign A", "Fall Campaign B", "Fall Campaign C"), values = c("#DC0000B2", "#E64B35B2", "#00A087B2", "#3C5488B2")) + + labs(title="Overall Traffic", subtitle="October 2017") +   labs(x = "Traffic Class", y="Num Visitors")
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity", colour="black") + theme_bw() +  scale_color_manual(labels = c("No Campaign", "Fall Campaign A", "Fall Campaign B", "Fall Campaign C"), values = c("#DC0000B2", "#E64B35B2", "#00A087B2", "#3C5488B2"))  + labs(title="Overall Traffic", subtitle="October 2017") +   labs(x = "Traffic Class", y="Num Visitors")
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity", colour="black") + theme_bw() + labs(title="Overall Traffic", subtitle="October 2017",x = "Traffic Class", y="Num Visitors") + scale_color_manual(labels = c("No Campaign", "Fall Campaign A", "Fall Campaign B", "Fall Campaign C"), values = c("#DC0000B2", "#E64B35B2", "#00A087B2", "#3C5488B2"))
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity", colour="black") + theme_bw() + labs(title="Overall Traffic", subtitle="October 2017",x = "Traffic Class", y="Num Visitors") + scale_color_manual(labels = c("No Campaign", "Fall Campaign A", "Fall Campaign B", "Fall Campaign C"), values = c("#DC0000B2", "#E64B35B2", "#00A087B2", "#3C5488B2"))+ guides(color=guide_legend("my title"))
ggplot(ga_data.melted, aes(fill=campaign, y=value, x=variable)) +
geom_bar(position="dodge", stat="identity", colour="black") + theme_bw() + labs(title="Overall Traffic", subtitle="October 2017",x = "Traffic Class", y="Num Visitors") + scale_fill_manual(labels = c("No Campaign", "Fall Campaign A", "Fall Campaign B", "Fall Campaign C"), values = c("#DC0000B2", "#E64B35B2", "#00A087B2", "#3C5488B2"))+ guides(color=guide_legend("my title"))
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#DC0000B2", colour="black")  + theme_bw()
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#DC0000B2", colour="black")  + theme_bw()  + labs(title="Overall Traffic", subtitle="October 2017",x = "Traffic Class", y="Num Visitors") + scale_fill_manual(labels = c("No Campaign", "Fall Campaign A", "Fall Campaign B", "Fall Campaign C"), values = c("#DC0000B2", "#E64B35B2", "#00A087B2", "#3C5488B2"))
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#DC0000B2", colour="black")  + theme_bw() + labs(title="Traffic for Traffic", subtitle="October 2017",x = "Metric", y="Num Visitors")
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#DC0000B2", colour="black")  + theme_bw() + labs(title="Traffic for Traffic", subtitle="October 2017",x = "Metric", y="Num Visitors") +
ga_data.campaignA
head(ga_data.campaignA)
ga_data.campaignA$variable = c("Users", "New Users", "Sessions", "Bounces", "Order Completed (Goal1)", "Registered (Goal2)")
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#DC0000B2", colour="black")  + theme_bw() + labs(title="Traffic for Traffic", subtitle="October 2017",x = "Metric", y="Num Visitors") +
))
ga_data.campaignA$variable = c("Users", "New Users", "Sessions", "Bounces", "Order Completed (Goal1)", "Registered (Goal2)")
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#DC0000B2", colour="black")  + theme_bw() + labs(title="Traffic for Traffic", subtitle="October 2017",x = "Metric", y="Num Visitors")
ga_data.campaignA$variable = factor(c("Users", "New Users", "Sessions", "Bounces", "Order Completed (Goal1)", "Registered (Goal2)"), levels = c("Users", "New Users", "Sessions", "Bounces", "Order Completed (Goal1)", "Registered (Goal2)"))
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#DC0000B2", colour="black")  + theme_bw() + labs(title="Traffic for Traffic", subtitle="October 2017",x = "Metric", y="Num Visitors")
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#DC0000B2", colour="black")  + theme_bw(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title="Traffic for Traffic", subtitle="October 2017",x = "Metric", y="Num Visitors")
ggplot(ga_data.campaignA, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#DC0000B2", colour="black")  + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title="Traffic for Traffic", subtitle="October 2017",x = "Metric", y="Num Visitors")
ggplot(ga_data.campaignB, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#00A087B2", colour="black") + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title="Traffic for Campaign B", subtitle="October 2017",x = "Metric", y="Num Visitors")
ga_data.campaignB = ga_data[3,]
ga_data.campaignB = melt(ga_data.campaignB, id="campaign")
ga_data.campaignB$variable = factor(c("Users", "New Users", "Sessions", "Bounces", "Order Completed (Goal1)", "Registered (Goal2)"), levels = c("Users", "New Users", "Sessions", "Bounces", "Order Completed (Goal1)", "Registered (Goal2)"))
ggplot(ga_data.campaignB, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#00A087B2", colour="black") + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title="Traffic for Campaign B", subtitle="October 2017",x = "Metric", y="Num Visitors")
ggplot(ga_data.campaignC, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=.5, fill="#3C5488B2", colour="black") + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title="Traffic for Campaign C", subtitle="October 2017",x = "Metric", y="Num Visitors")
ggplot(ga_data.toCompare, aes(x = campaign, y =value ,fill = variable)) +  geom_bar(stat = "identity", position = "stack", colour="black")  +  scale_fill_startrek() +theme_bw()
ga_data.toCompare = ga_data[c(2,3,4),c("campaign", "newUsers", "goal1Completions", "goal2Completions")]
ga_data.toCompare = melt(ga_data.toCompare, id.vars = "campaign")
ga_data.toCompare
ga_data.toCompare = ga_data[c(2,3,4),c("campaign", "newUsers", "goal1Completions", "goal2Completions")]
ga_data.toCompare
ga_data.toCompare = melt(ga_data.toCompare, id.vars = "campaign")
ga_data.toCompare
ga_data.toCompare$campaign = factor(c("Fall Campaign A", "Fall Campaign B", "Fall Campaign C"), levels = c("Fall Campaign A", "Fall Campaign B", "Fall Campaign C"))
ga_data.toCompare = melt(ga_data.toCompare, id.vars = "campaign")
ga_data.toCompare
ga_data.toCompare = ga_data[c(2,3,4),c("campaign", "newUsers", "goal1Completions", "goal2Completions")]
ga_data.toCompare$campaign
ga_data.toCompare$campaign = factor(c("Fall Campaign A", "Fall Campaign B", "Fall Campaign C"), levels = c("Fall Campaign A", "Fall Campaign B", "Fall Campaign C"))
ga_data.toCompare = melt(ga_data.toCompare, id.vars = "campaign")
ga_data.toCompare
colnames(ga_data.toCompare)
ga_data.toCompare = ga_data[c(2,3,4),c("campaign", "newUsers", "goal1Completions", "goal2Completions")]
ga_data.toCompare$campaign = factor(c("Fall Campaign A", "Fall Campaign B", "Fall Campaign C"), levels = c("Fall Campaign A", "Fall Campaign B", "Fall Campaign C"))
colnames(ga_data.toCompare)
# Comparing Campaings only
ga_data.toCompare = ga_data[c(2,3,4),c("campaign", "newUsers", "goal1Completions", "goal2Completions")]
ga_data.toCompare$campaign = factor(c("Fall Campaign A", "Fall Campaign B", "Fall Campaign C"), levels = c("Fall Campaign A", "Fall Campaign B", "Fall Campaign C"))
colnames(ga_data.toCompare) = c("Campaign", "New Users", "Order Completed (Goal1)", "Registered (Goal2)")
ga_data.toCompare = melt(ga_data.toCompare, id.vars = "campaign")
# Comparing Campaings only
ga_data.toCompare = ga_data[c(2,3,4),c("campaign", "newUsers", "goal1Completions", "goal2Completions")]
ga_data.toCompare$campaign = factor(c("Fall Campaign A", "Fall Campaign B", "Fall Campaign C"), levels = c("Fall Campaign A", "Fall Campaign B", "Fall Campaign C"))
colnames(ga_data.toCompare) = c("Campaign", "New Users", "Order Completed (Goal1)", "Registered (Goal2)")
ga_data.toCompare = melt(ga_data.toCompare, id.vars = "Campaign")
ga_data.toCompare
ggplot(ga_data.toCompare, aes(x = campaign, y =value ,fill = variable)) +  geom_bar(stat = "identity", position = "stack", colour="black")  +  scale_fill_startrek() +theme_bw()
ggplot(ga_data.toCompare, aes(x = Campaign, y =value ,fill = variable)) +  geom_bar(stat = "identity", position = "stack", colour="black")  +  scale_fill_startrek() +theme_bw()
